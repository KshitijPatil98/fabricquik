################################################################################
#
#   SECTION: Capabilities
#
#   - This section defines the capabilities of fabric network. This is a new
#   concept as of v1.1.0 and should not be utilized in mixed networks with
#   v1.0.x peers and ${ORDERERNAME_ALL_LOWER}s.  Capabilities define features which must be
#   present in a fabric binary for that binary to safely participate in the
#   fabric network.  For instance, if a new MSP type is added, newer binaries
#   might recognize and validate the signatures from this type, while older
#   binaries without this support would be unable to validate those
#   transactions.  This could lead to different versions of the fabric binaries
#   having different world states.  Instead, defining a capability for a channel
#   informs those binaries without this capability that they must cease
#   processing transactions until they have been upgraded.  For v1.0.x if any
#   capabilities are defined (including a map with all capabilities turned off)
#   then the v1.0.x peer will deliberately crash.
#
################################################################################
Capabilities:
    # Channel capabilities apply to both the ${ORDERERNAME_ALL_LOWER}s and the peers and must be
    # supported by both.
    # Set the value of the capability to true to require it.
    Channel: &ChannelCapabilities
        # V2_0 capability ensures that ${ORDERERNAME_ALL_LOWER}s and peers behave according
        # to v2.0 channel capabilities. ${ORDERERNAME}s and peers from
        # prior releases would behave in an incompatible way, and are therefore
        # not able to participate in channels at v2.0 capability.
        # Prior to enabling V2.0 channel capabilities, ensure that all
        # ${ORDERERNAME_ALL_LOWER}s and peers on a channel are at v2.0.0 or later.
        V2_0: true

    # ${ORDERERNAME} capabilities apply only to the ${ORDERERNAME_ALL_LOWER}s, and may be safely
    # used with prior release peers.
    # Set the value of the capability to true to require it.
    Orderer: &OrdererCapabilities
        # V2_0 ${ORDERERNAME_ALL_LOWER} capability ensures that ${ORDERERNAME_ALL_LOWER}s behave according
        # to v2.0 ${ORDERERNAME_ALL_LOWER} capabilities. ${ORDERERNAME}s from
        # prior releases would behave in an incompatible way, and are therefore
        # not able to participate in channels at v2.0 ${ORDERERNAME_ALL_LOWER} capability.
        # Prior to enabling V2.0 ${ORDERERNAME_ALL_LOWER} capabilities, ensure that all
        # ${ORDERERNAME_ALL_LOWER}s on channel are at v2.0.0 or later.
        V2_0: true

    # Application capabilities apply only to the peer network, and may be safely
    # used with prior release ${ORDERERNAME_ALL_LOWER}s.
    # Set the value of the capability to true to require it.
    Application: &ApplicationCapabilities
        # V2_0 application capability ensures that peers behave according
        # to v2.0 application capabilities. Peers from
        # prior releases would behave in an incompatible way, and are therefore
        # not able to participate in channels at v2.0 application capability.
        # Prior to enabling V2.0 application capabilities, ensure that all
        # peers on channel are at v2.0.0 or later.
        V2_0: true

################################################################################
#
#   SECTION: Application
#
#   - This section defines the values to encode into a config transaction or
#   genesis block for application related parameters
#
################################################################################
Application: &ApplicationDefaults

    # Organizations is the list of orgs which are defined as participants on
    # the application side of the network
    Organizations:

    # Policies defines the set of policies at this level of the config tree
    # For Application policies, their canonical path is
    # The LifecycleEndorsement policy is set to only owner meaning only owner need to approve the chaincode and with his approval the chaincode definition is committed to the channel. But for any    other org to use the functions of chaincode they first need to approve the chaincode. Without approval they cannot use the chaincode functions even if its committed 
    #   /Channel/Application/<PolicyName>
    Policies:
        Readers:
            Type: ImplicitMeta
            Rule: "ANY Readers"
        Writers:
            Type: ImplicitMeta
            Rule: "ANY Writers"
        Admins:
            Type: Signature
            Rule: "${ADMIN}"
        LifecycleEndorsement:
            Type: Signature
            Rule: "${LIFECYCLE}"
        Endorsement:
            Type: Signature
            Rule: "${ENDORSEMENT}"

    Capabilities:
        <<: *ApplicationCapabilities

